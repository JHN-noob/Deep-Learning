CNN(Convolutional Neural Network)


DNN은 Fully Connected Layer로 구성되어 있다.
  • 입력 데이터는 1차원(배열) 형태로 한정
  • 이미지를 1차원 형태의 데이터로 만들면 공간적/지역적(spatial/topological) 정보가 손실됨
  • 또한 별도의 추상화 과정없이 바로 raw data로 연산하기 때문에 학습 효율성이 저하됨

이를 해결하려한 모델이 CNN이다.
이미지의 특정 부분은 전체에서 차지하는 비율은 작아도 해당 이미지의 특징을 판단하기 위해 중요한 특징일 수 있다.
이를 확인하기 위해 전체를 일정 비율로 잘라서 특정 부분을 확인하는것이 효과적일 수 있다.

CNN 구성
  • CNN은 이미지 특징을 추출하는 부분(Convolution Layer, Pooling Layer), 클래스를 분류하는 부분(Fully Connected Layer)으로 구성됨
채널(Channel)
  • 이미지 픽셀 값은 실수이며, 흑백은 하나의 실수로 표현(1채널), 컬러는 RGB 3개의 실수로 표현(3채널)
이미지 특징을 추출하는 부분
  • Convolution Layer
    • 입력 데이터에 필터를 적용 후, 활성화함수를 적용함
    • 필터 또는 커널 : 특징을 찾아내기 위한 공용 파라미터, 가중치와 유사하게 처리됨
    • 예) 5x5 이미지에 3x3 필터를 적용하면, Feature Map(특성맵)은 3x3 출력이 된다.
  • 필터를 적용하는 이유
    • Sobel filter(윤곽 특징을 찾아주는 필터)같은 필터처럼 이미지의 다양한 특징을 추출해서 학습하면 성능이 개선될 수 있음
Zero Padding
  • 5x5 이미지에 3x3 필터를 적용하면 결과는 3x3이 되므로 일부 데이터가 손실됨
  • 이를 해결하기 위해 0으로 구성된 테두리를 가장자리에 감싸주는것을 Zero Padding이라고 함
    • 이때 padding을 상하좌우에 1씩 적용하면, 상하좌우 모두 2만큼 너비, 높이 사이즈가 늘어남
  • 예) (5+2) x (5+2) = 7x7
Stride
  • 필터를 얼마만큼 움직여주는가를 의미
  • 기본적으로 1이지만, 테스트에 따라서 1 이상의 값을 설정할 수도 있음
  • 출력너비, 높이 수식
    • ((너비 + 2*패딩 - 필터 너비) / 스트라이드) + 1
    • ((높이 + 2*패딩 - 필터 높이) / 스트라이드) + 1
